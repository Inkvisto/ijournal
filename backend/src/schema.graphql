# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
<<<<<<< HEAD
  refreshToken: String!
  user: UserModel
=======
  refreshToken: JWT!
  user: User!
>>>>>>> 7d9670b855cfe4c06a67beab30698f29fb923f17
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreatePostInput {
  content: [String!]!
  published: Boolean!
  title: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): UserModel!
  createPost(data: CreatePostInput!): [PostModel!]!
  getAuthenticatedUser(data: String!): Auth!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): UserModel!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type PostConnection {
  edges: [PostModelEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PostModel {
  author: UserModel
  authorId: String!
  content: [String!]!

  """Identifies the date and time when the object was created."""
<<<<<<< HEAD
  createdAt: Date!
  id: String!
  likes: Int!
=======
  createdAt: DateTime!
  id: ID!
>>>>>>> 7d9670b855cfe4c06a67beab30698f29fb923f17
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type PostModelEdge {
  cursor: String!
  node: PostModel!
}

input PostOrder {
  direction: OrderDirection!
  field: PostOrderField!
}

"""Properties by which post connections can be ordered."""
enum PostOrderField {
  content
  createdAt
  id
  published
  title
  updatedAt
}

type Query {
  hello(name: String!): String!
  helloWorld: String!
  me: UserModel!
  post(postId: String!): PostModel!
  publishedPosts(after: String, before: String, first: Int, last: Int, orderBy: PostOrder, query: String, skip: Int): PostConnection!
  userPosts(userId: String!): [PostModel!]!
}

input SignupInput {
  email: String!
  password: String!
  username: String!
}

type Subscription {
  postCreated: PostModel!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateUserInput {
  username: String!
}

<<<<<<< HEAD
type UserModel {
=======
type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
>>>>>>> 7d9670b855cfe4c06a67beab30698f29fb923f17
  email: String!
  id: ID!
<<<<<<< HEAD
  password: String!
  posts: [PostModel!]
  refresh: String!
  role: String!
  username: String!
=======
  lastname: String
  posts: [Post!]!
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
>>>>>>> 7d9670b855cfe4c06a67beab30698f29fb923f17
}
